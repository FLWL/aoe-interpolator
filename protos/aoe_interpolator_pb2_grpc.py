# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from protos import aoe_interpolator_pb2 as aoe__interpolator__pb2


class AoeInterpolatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StartInterpolator = channel.unary_unary(
        '/aoeinterpolator.AoeInterpolator/StartInterpolator',
        request_serializer=aoe__interpolator__pb2.StartInterpolatorRequest.SerializeToString,
        response_deserializer=aoe__interpolator__pb2.StartInterpolatorResponse.FromString,
        )
    self.GetInterpolatedFrame = channel.unary_unary(
        '/aoeinterpolator.AoeInterpolator/GetInterpolatedFrame',
        request_serializer=aoe__interpolator__pb2.InterpolatedFrameRequest.SerializeToString,
        response_deserializer=aoe__interpolator__pb2.InterpolatedFrameResponse.FromString,
        )
    self.StopInterpolator = channel.unary_unary(
        '/aoeinterpolator.AoeInterpolator/StopInterpolator',
        request_serializer=aoe__interpolator__pb2.StopInterpolatorRequest.SerializeToString,
        response_deserializer=aoe__interpolator__pb2.StopInterpolatorResponse.FromString,
        )
    self.TerminateScript = channel.unary_unary(
        '/aoeinterpolator.AoeInterpolator/TerminateScript',
        request_serializer=aoe__interpolator__pb2.TerminateScriptRequest.SerializeToString,
        response_deserializer=aoe__interpolator__pb2.TerminateScriptResponse.FromString,
        )


class AoeInterpolatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StartInterpolator(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetInterpolatedFrame(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopInterpolator(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TerminateScript(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AoeInterpolatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StartInterpolator': grpc.unary_unary_rpc_method_handler(
          servicer.StartInterpolator,
          request_deserializer=aoe__interpolator__pb2.StartInterpolatorRequest.FromString,
          response_serializer=aoe__interpolator__pb2.StartInterpolatorResponse.SerializeToString,
      ),
      'GetInterpolatedFrame': grpc.unary_unary_rpc_method_handler(
          servicer.GetInterpolatedFrame,
          request_deserializer=aoe__interpolator__pb2.InterpolatedFrameRequest.FromString,
          response_serializer=aoe__interpolator__pb2.InterpolatedFrameResponse.SerializeToString,
      ),
      'StopInterpolator': grpc.unary_unary_rpc_method_handler(
          servicer.StopInterpolator,
          request_deserializer=aoe__interpolator__pb2.StopInterpolatorRequest.FromString,
          response_serializer=aoe__interpolator__pb2.StopInterpolatorResponse.SerializeToString,
      ),
      'TerminateScript': grpc.unary_unary_rpc_method_handler(
          servicer.TerminateScript,
          request_deserializer=aoe__interpolator__pb2.TerminateScriptRequest.FromString,
          response_serializer=aoe__interpolator__pb2.TerminateScriptResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'aoeinterpolator.AoeInterpolator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
